---
swagger: "2.0"
info:
  version: "0.1.0"
  title: "cdg"
  license:
    name: "Apache 2.0"
    url: "https://www.apache.org/licenses/LICENSE-2.0.html"
basePath: "/"
schemes:
- "http"
paths:
  /collection:
    get:
      tags:
      - "collection"
      summary: "Get collection list"
      operationId: "getCollection"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "limit"
        in: "query"
        description: "number of items to retrieve"
        required: false
        type: "integer"
        default: 5
        x-exportParamName: "Limit"
        x-optionalDataType: "Int32"
      - name: "cursor"
        in: "query"
        description: "paging cursor"
        required: false
        type: "string"
        x-exportParamName: "Cursor"
        x-optionalDataType: "String"
      - name: "statuses"
        in: "query"
        description: "status filter (comma separated)"
        required: false
        type: "string"
        x-exportParamName: "Statuses"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Collections"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/lca_internal_pkg_dto.CollectionDto"
        "400":
          description: "Failure response"
  /collection/run/{runId}:
    get:
      tags:
      - "collection"
      summary: "Get run details"
      operationId: "getCollectionRunRunId"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "runId"
        in: "path"
        description: "Run id"
        required: true
        type: "string"
        x-exportParamName: "RunId"
      responses:
        "200":
          description: "Run"
          schema:
            $ref: "#/definitions/lca_internal_pkg_dto.RunDto"
        "400":
          description: "Failure response"
  /collection/run/{runId}/archive:
    get:
      tags:
      - "collection"
      summary: "File"
      operationId: "getCollectionRunRunIdArchive"
      consumes:
      - "application/json"
      produces:
      - "application/octet-stream"
      parameters:
      - name: "runId"
        in: "path"
        description: "Run id"
        required: true
        type: "string"
        x-exportParamName: "RunId"
      responses:
        "200":
          description: "File contents"
        "400":
          description: "Failure response"
  /collection/{id}:
    get:
      tags:
      - "collection"
      summary: "Get collection"
      operationId: "getCollectionId"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "Id of the Collection"
        required: true
        type: "string"
        x-exportParamName: "Id"
      responses:
        "200":
          description: "Collection"
          schema:
            $ref: "#/definitions/lca_internal_pkg_dto.CollectionDto"
        "400":
          description: "Failure response"
  /healthz:
    get:
      summary: "Get application status"
      operationId: "getHealthz"
      consumes:
      - "application/json"
      produces:
      - "text/plain"
      parameters: []
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/lca_api_server.ValueObject"
  /version:
    get:
      summary: "Get application version"
      operationId: "getVersion"
      consumes:
      - "application/json"
      produces:
      - "text/plain"
      parameters: []
      responses:
        "200":
          description: "Version number"
          schema:
            $ref: "#/definitions/lca_api_server.ValueObject"
definitions:
  lca_api_server.ValueObject:
    type: "object"
    properties:
      value:
        type: "string"
  lca_internal_pkg_dto.CollectionDto:
    type: "object"
    properties:
      collectionId:
        type: "string"
      go:
        $ref: "#/definitions/lca_internal_pkg_events.GoInfo"
      runs:
        type: "array"
        items:
          $ref: "#/definitions/lca_internal_pkg_dto.RunDto"
      ssh:
        $ref: "#/definitions/lca_internal_pkg_events.SSHInfo"
      type:
        type: "string"
    example:
      go:
        script: "script"
        timeout: 0
      ssh:
        password: "password"
        port: 6
        host: "host"
        user: "user"
        script: "script"
        timeout: 1
      type: "type"
      collectionId: "collectionId"
      runs:
      - runId: "runId"
        error: "error"
        collectionId: "collectionId"
        status: "status"
      - runId: "runId"
        error: "error"
        collectionId: "collectionId"
        status: "status"
  lca_internal_pkg_dto.RunDto:
    type: "object"
    properties:
      collectionId:
        type: "string"
      error:
        type: "string"
      runId:
        type: "string"
      status:
        type: "string"
    example:
      runId: "runId"
      error: "error"
      collectionId: "collectionId"
      status: "status"
  lca_internal_pkg_events.GoInfo:
    type: "object"
    properties:
      script:
        type: "string"
      timeout:
        type: "integer"
        format: "int64"
    example:
      script: "script"
      timeout: 0
  lca_internal_pkg_events.SSHInfo:
    type: "object"
    properties:
      host:
        type: "string"
      password:
        type: "string"
      port:
        type: "integer"
        format: "int32"
      script:
        type: "string"
      timeout:
        type: "integer"
        format: "int64"
      user:
        type: "string"
    example:
      password: "password"
      port: 6
      host: "host"
      user: "user"
      script: "script"
      timeout: 1
